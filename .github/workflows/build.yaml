name: build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to ci'
        required: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Verify Docker Compose file
        run: |
          if [ ! -f docker-compose.yaml ]; then
            echo "docker-compose.yaml not found!"
            exit 1
          fi

      - name: Build Docker images
        run: docker-compose -f docker-compose.yaml build

      - name: Start Docker containers
        run: docker-compose -f docker-compose.yaml up -d

      - name: Wait for services to be ready
        run: |
          sleep 20

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22.3'

      - name: Install dependencies
        run: go mod download

      - name: Run unit  tests
        run: go test -v ./tests/

      - name: Stop Docker containers
        run: docker-compose -f docker-compose.yaml down

      - name: Run unit tests and generate coverage report
        run: |
          go test -v -coverprofile=coverage.txt ./internal/http_server/handlers/auth
          go test -v -coverprofile=auth_coverage.txt ./internal/http_server/handlers/auth
          go test -v -coverprofile=flat_coverage.txt ./internal/http_server/handlers/flat
          go test -v -coverprofile=house_coverage.txt ./internal/http_server/handlers/house
          go tool cover -func=coverage.txt -o=coverage.out
          go tool cover -func=auth_coverage.txt -o=auth_coverage.out
          go tool cover -func=flat_coverage.txt -o=flat_coverage.out
          go tool cover -func=house_coverage.txt -o=house_coverage.out
          cat auth_coverage.out flat_coverage.out house_coverage.out > coverage.out

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true